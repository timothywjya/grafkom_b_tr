#include<Windows.h>
#include<gl/glut.h>

void init(void);
void tampil(void);
void keyboard(unsigned char, int, int);
void ukuran (int, int);
void mouse(int button,int state, int x, int y);
void mouseMotion(int x, int y);

float xrot = 0.0f;
float yrot = 0.0f;
float xdiff = 0.0f;
float ydiff = 0.0f;
bool mouseDown = false;
int is_depth;

int main (int argc, char **argv){
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
	glutInitWindowSize(800, 600);
	glutInitWindowPosition(250, 80);
	glutCreateWindow("TR_ASISTENSI_DOSEN_GRAFKOM_B");
	init();
	glutDisplayFunc(tampil);
	glutKeyboardFunc(keyboard);
	glutMouseFunc(mouse);
	glutMotionFunc(mouseMotion);
	glutReshapeFunc(ukuran);
	glutIdleFunc(tampil);
	glutMainLoop();
	return 0;
}

void init(void){
	glClearColor (0.0, 0.0, 0.0, 0.0);
	glMatrixMode(GL_PROJECTION);
	glEnable(GL_DEPTH_TEST);
	//glEnable(GL_LIGHT0);
	//glEnable(GL_LIGHTING);
	glEnable(GL_COLOR_MATERIAL);
	is_depth=1;
	glMatrixMode(GL_MODELVIEW);
	glPointSize(9.0);
	glLineWidth(6.0f);
}

void idle(){
    if(!mouseDown){
        xrot += 0.3f;
        yrot += 0.4f;
    }glutPostRedisplay();
}

void mouse(int button,int state, int x, int y){
    if(button == GLUT_LEFT_BUTTON && state == GLUT_DOWN){
        mouseDown = true;
        xdiff = x-yrot;
        ydiff = -y+xrot;
    }else{
        mouseDown = false;
    }
}

void mouseMotion(int x, int y){
    if (mouseDown){
        yrot = x - xdiff;
        xrot = y + ydiff;
        glutPostRedisplay();
    }
}

void tampil(void){
	if (is_depth){
		glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
	}else{
        glClear(GL_COLOR_BUFFER_BIT);
	}

    //alas Kotak
	glBegin(GL_QUADS);
	glColor3f(1.0, 1.0, 1.0);
	glVertex3f(100.0, 0.0, -75.0);
	glVertex3f(100.0, 0.0, 75.0);
	glVertex3f(-100.0, 0.0, 75.0);
	glVertex3f(-100.0, 0.0, -75.0);
	glEnd();
	//sisikanan
	glBegin(GL_POLYGON);
	glVertex3f(100.0, 0.0, -75.0);
	glVertex3f(100.0, 0.0, 75.0);
	glVertex3f(107.5, 0.0, 75.0);
	glVertex3f(157.0, 0.0, 25.0);
	glVertex3f(157.0, 0.0, -25.0);
	glVertex3f(107.5, 0.0, -75.0);
	glEnd();
	//sisikiri
	glBegin(GL_POLYGON);
	glVertex3f(-100.0, 0.0, -75.0);
	glVertex3f(-100.0, 0.0, 75.0);
	glVertex3f(-107.5, 0.0, 75.0);
	glVertex3f(-157.0, 0.0, 25.0);
	glVertex3f(-157.0, 0.0, -25.0);
	glVertex3f(-107.5, 0.0, -75.0);
	glEnd();
	//dindingkanan
	glBegin(GL_QUADS);
	glVertex3f(157.0, 0.0, 25.0);
	glVertex3f(107.5, 0.0, 75.0);
	glVertex3f(107.5, 65.0, 75.0);
	glVertex3f(157.0, 65.0, 25.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(157.0, 0.0, -25.0);
	glVertex3f(157.0, 0.0, 25.0);
	glVertex3f(157.0, 65.0, 25.0);
	glVertex3f(157.0, 65.0, -25.0);
	glEnd();
    glBegin(GL_QUADS);
    glVertex3f(157.0, 0.0, -25.0);
	glVertex3f(107.5, 0.0, -75.0);
	glVertex3f(107.5, 65.0, -75.0);
	glVertex3f(157.0, 65.0, -25.0);
	glEnd();
	//dindingkiri
	glBegin(GL_QUADS);
	glVertex3f(-157.0, 0.0, 25.0);
	glVertex3f(-107.5, 0.0, 75.0);
	glVertex3f(-107.5, 65.0, 75.0);
	glVertex3f(-157.0, 65.0, 25.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(-157.0, 0.0, -25.0);
	glVertex3f(-157.0, 0.0, 25.0);
	glVertex3f(-157.0, 65.0, 25.0);
	glVertex3f(-157.0, 65.0, -25.0);
	glEnd();
    glBegin(GL_QUADS);
    glVertex3f(-157.0, 0.0, -25.0);
	glVertex3f(-107.5, 0.0, -75.0);
	glVertex3f(-107.5, 65.0, -75.0);
	glVertex3f(-157.0, 65.0, -25.0);
	glEnd();
	//pintu
	glBegin(GL_QUADS);
	glColor3f(0.0, 0.0, 0.0);
	glVertex3f(5.0, 10.0, 75.0);
	glVertex3f(-5.0, 10.0, 75.0);
	glVertex3f(-5.0, 0.0, 75.0);
	glVertex3f(5.0, 0.0, 75.0);
    glEnd();
    //sisiputih
    glBegin(GL_QUADS);
	glColor3f(1.0, 1.0, 1.0);
	glVertex3f(5.0, 10.0, 75.0);
	glVertex3f(107.5, 10.0, 75.0);
	glVertex3f(107.5, 0.0, 75.0);
	glVertex3f(5.0, 0.0, 75.0);
    glEnd();
    glBegin(GL_QUADS);
	glColor3f(1.0, 1.0, 1.0);
	glVertex3f(-5.0, 10.0, 75.0);
	glVertex3f(-107.5, 10.0, 75.0);
	glVertex3f(-107.5, 0.0, 75.0);
	glVertex3f(-5.0, 0.0, 75.0);
    glEnd();
    glBegin(GL_QUADS);
    glColor3f(1.0, 1.0, 1.0);
	glVertex3f(107.5, 10.0, 75.0);
	glVertex3f(-107.5, 10.0, 75.0);
	glVertex3f(-107.5, 65.0, 75.0);
	glVertex3f(107.5, 65.0, 75.0);
    glEnd();
    glBegin(GL_QUADS);
    glColor3f(0.75, 0.75, 0.75);
    glVertex3f(107.5, 75.0, 75.0);
	glVertex3f(-107.5, 75.0, 75.0);
	glVertex3f(-107.5, 65.0, 75.0);
	glVertex3f(107.5, 65.0, 75.0);
	glEnd();

	glBegin(GL_QUADS);
	glVertex3f(157.0, 75.0, 25.0);
	glVertex3f(107.5, 75.0, 75.0);
	glVertex3f(107.5, 65.0, 75.0);
	glVertex3f(157.0, 65.0, 25.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(157.0, 75.0, -25.0);
	glVertex3f(157.0, 75.0, 25.0);
	glVertex3f(157.0, 65.0, 25.0);
	glVertex3f(157.0, 65.0, -25.0);
	glEnd();
    glBegin(GL_QUADS);
    glVertex3f(157.0, 75.0, -25.0);
	glVertex3f(107.5, 75.0, -75.0);
	glVertex3f(107.5, 65.0, -75.0);
	glVertex3f(157.0, 65.0, -25.0);
	glEnd();

	glBegin(GL_QUADS);
	glVertex3f(-157.0, 75.0, 25.0);
	glVertex3f(-107.5, 75.0, 75.0);
	glVertex3f(-107.5, 65.0, 75.0);
	glVertex3f(-157.0, 65.0, 25.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(-157.0, 75.0, -25.0);
	glVertex3f(-157.0, 75.0, 25.0);
	glVertex3f(-157.0, 65.0, 25.0);
	glVertex3f(-157.0, 65.0, -25.0);
	glEnd();
    glBegin(GL_QUADS);
    glVertex3f(-157.0, 75.0, -25.0);
	glVertex3f(-107.5, 75.0, -75.0);
	glVertex3f(-107.5, 65.0, -75.0);
	glVertex3f(-157.0, 65.0, -25.0);
	glEnd();
	glBegin(GL_QUADS);
	glColor3f(0.5, 0.5, 0.5);
	glVertex3f(-5.0, 0.0, 75.0);
	glVertex3f(5.0, 0.0, 75.0);
	glVertex3f(5.0, 0.0, 150.0);
	glVertex3f(-5.0, 0.0, 150.0);
	glEnd();
	//penghijauan
	glBegin(GL_QUADS);
	glColor3f(0.125, 0.5, 0.0);
	glVertex3f(5.0, 0.0, 75.0);
	glVertex3f(5.0, 0.0, 150.0);
	glVertex3f(107.5, 0.0, 150.0);
	glVertex3f(107.5, 0.0, 75.0);
	glEnd();
	glBegin(GL_QUADS);
	glColor3f(0.125, 0.5, 0.0);
	glVertex3f(-5.0, 0.0, 75.0);
	glVertex3f(-5.0, 0.0, 150.0);
	glVertex3f(-107.5, 0.0, 150.0);
	glVertex3f(-107.5, 0.0, 75.0);
	glEnd();
	//serongatap
	glBegin(GL_QUADS);
	glColor3f(0.7, 0.7, 0.7);
	glVertex3f(107.5, 75.0, 75.0);
	glVertex3f(-107.5, 75.0, 75.0);
	glVertex3f(-107.5, 85.0, 65.0);
	glVertex3f(107.5, 85.0, 65.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(157.0, 75.0, -25.0);
	glVertex3f(157.0, 75.0, 25.0);
	glVertex3f(147.0, 85.0, 25.0);
	glVertex3f(147.0, 85.0, -25.0);
	glEnd();
	//serongatapkiri
	glBegin(GL_QUADS);
	glVertex3f(-157.0, 75.0, -25.0);
	glVertex3f(-157.0, 75.0, 25.0);
	glVertex3f(-147.0, 85.0, 25.0);
	glVertex3f(-147.0, 85.0, -25.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(-157.0, 75.0, 25.0);
	glVertex3f(-147.0, 85.0, 25.0);
	glVertex3f(-107.5, 85.0, 65.0);
	glVertex3f(-107.5, 75.0, 75.0);
	glEnd();
    glBegin(GL_QUADS);
	glVertex3f(157.0, 75.0, 25.0);
	glVertex3f(147.0, 85.0, 25.0);
	glVertex3f(107.5, 85.0, 65.0);
	glVertex3f(107.5, 75.0, 75.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(-157.0, 75.0, -25.0);
	glVertex3f(-147.0, 85.0, -25.0);
	glVertex3f(-107.5, 85.0, -65.0);
	glVertex3f(-107.5, 75.0, -75.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(157.0, 75.0, -25.0);
	glVertex3f(147.0, 85.0, -25.0);
	glVertex3f(107.5, 85.0, -65.0);
	glVertex3f(107.5, 75.0, -75.0);
	glEnd();
	//batasan pipa
	glBegin(GL_QUADS);
	glVertex3f(-107.5, 85.0, 65.0);
	glVertex3f(107.5, 85.0, 65.0);
	glVertex3f(107.5, 85.0, 55.0);
	glVertex3f(-107.5, 85.0, 55.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(147.0, 85.0, 25.0);
	glVertex3f(147.0, 85.0, -25.0);
	glVertex3f(137.0, 85.0, -25.0);
	glVertex3f(137.0, 85.0, 25.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(-147.0, 85.0, 25.0);
	glVertex3f(-147.0, 85.0, -25.0);
	glVertex3f(-137.0, 85.0, -25.0);
	glVertex3f(-137.0, 85.0, 25.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(-107.5, 85.0, 55.0);
	glVertex3f(-107.5, 85.0, 65.0);
	glVertex3f(-137.0, 85.0, 25.0);
	glVertex3f(-147.0, 85.0, 25.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(107.5, 85.0, 55.0);
	glVertex3f(107.5, 85.0, 65.0);
	glVertex3f(137.0, 85.0, 25.0);
	glVertex3f(147.0, 85.0, 25.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(-107.5, 85.0, -55.0);
	glVertex3f(-107.5, 85.0, -65.0);
	glVertex3f(-137.0, 85.0, -25.0);
	glVertex3f(-147.0, 85.0, -25.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(107.5, 85.0, -55.0);
	glVertex3f(107.5, 85.0, -65.0);
	glVertex3f(137.0, 85.0, -25.0);
	glVertex3f(147.0, 85.0, -25.0);
	glEnd();

	glBegin(GL_QUADS);
	glColor3f(0.5, 0.5, 0.5);
	glVertex3f(-107.5, 85.0, 50.0);
	glVertex3f(107.5, 85.0, 50.0);
	glVertex3f(107.5, 85.0, 55.0);
	glVertex3f(-107.5, 85.0, 55.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(132.0, 85.0, 25.0);
	glVertex3f(132.0, 85.0, -25.0);
	glVertex3f(137.0, 85.0, -25.0);
	glVertex3f(137.0, 85.0, 25.0);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(-132.0, 85.0, 25.0);
	glVertex3f(-132.0, 85.0, -25.0);
	glVertex3f(-137.0, 85.0, -25.0);
	glVertex3f(-137.0, 85.0, 25.0);
	glEnd();


	glPushMatrix();
	glPopMatrix();

	glutSwapBuffers();
}

void keyboard(unsigned char key, int x, int y){
	switch (key){
	case 'w':
	case 'W':
		glTranslatef(0.0,0.0,3.0);
		break;
	case 'd':
	case 'D':
		glTranslatef(3.0,0.0,0.0);
		break;
	case 's':
	case 'S':
		glTranslatef(0.0,0.0,-3.0);
		break;
	case 'a':
	case 'A':
		glTranslatef(-3.0,0.0,0.0);
		break;
	case '7':
		glTranslatef(0.0,3.0,0.0);
		break;
	case '9':
		glTranslatef(0.0,-3.0,0.0);
		break;
	case '2':
		glRotatef(2.0,1.0,0.0,0.0);
		break;
	case '8':
		glRotatef(-2.0,1.0,0.0,0.0);
		break;
	case '6':
		glRotatef(2.0,0.0,1.0,0.0);
		break;
	case '4':
		glRotatef(-2.0,0.0,1.0,0.0);
		break;
	case '1':
		glRotatef(2.0,0.0,0.0,1.0);
		break;
	case '3':
		glRotatef(-2.0,0.0,0.0,1.0);
		break;
	case '5':
		if (is_depth){
			is_depth = 0;
			glDisable(GL_DEPTH_TEST);
		}else{
			is_depth =1;
			glEnable(GL_DEPTH_TEST);
		}
	}
	tampil();
}

void ukuran(int lebar, int tinggi){
	if(tinggi == 0) tinggi = 1;
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluPerspective(50.0, lebar / tinggi, 50.0, 500.0);
	glTranslatef(0.0, -5.0, -150.0);
	glMatrixMode(GL_MODELVIEW);
}
